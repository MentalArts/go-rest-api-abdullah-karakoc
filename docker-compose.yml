version: '3.8'

services:
    api:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8000:8000"
        depends_on:
            - db
            - redis
        environment:
            DB_HOST: ${DB_HOST}
            DB_USER: ${DB_USER}
            DB_PASSWORD: ${DB_PASSWORD}
            DB_NAME: ${DB_NAME}
            DB_PORT: ${DB_PORT}
            DB_SSLMODE: disable
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
        networks:
            - shared_network
        restart: on-failure

    db:
        image: postgres:17-alpine
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - shared_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
            interval: 10s
            timeout: 10s
            retries: 5

    redis:
        image: redis:alpine
        ports:
            - "6379:6379"
        networks:
            - shared_network
        restart: on-failure
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 10s
            retries: 5

volumes:
    pgdata:

networks:
    shared_network:
        driver: bridge
